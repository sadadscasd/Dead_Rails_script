local AUTO_FARM_ENABLED = true
local SELF_HEALING = true
local STEALTH_MODE = true
local AUTO_RESTART = true

-- –£–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
local ADAPTIVE_SETTINGS = {
    CheckInterval = 1.5,
    MaxFarmTime = 120,
    ErrorThreshold = 5,
    PerformanceScanInterval = 30,
    MemoryCleanupInterval = 60,
    StealthLevel = 8
}

-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–≥—É–ª—è—Ç–æ—Ä —Å–∫–æ—Ä–æ—Å—Ç–∏
local function adaptiveSpeedController()
    local fps = math.floor(1/RunService.Heartbeat:Wait())
    local baseDelay = 0.3
    
    if fps < 20 then
        return baseDelay * 2.5
    elseif fps < 30 then
        return baseDelay * 1.8
    elseif fps < 45 then
        return baseDelay * 1.3
    else
        return baseDelay
    end
end

-- –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
local function autoRestartSystem()
    if not AUTO_RESTART then return end
    
    local function scheduleRestart()
        while AUTO_FARM_ENABLED do
            local uptime = tick() - (getgenv().FarmStartTime or tick())
            
            -- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 30-45 –º–∏–Ω—É—Ç
            if uptime > math.random(1800, 2700) then
                warn("üîÑ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è")
                
                protectedCall(function()
                    local player = Services.Players.LocalPlayer
                    if player and player.Character then
                        local humanoid = player.Character:FindFirstChild("Humanoid")
                        if humanoid then
                            humanoid:TakeDamage(humanoid.MaxHealth)
                        end
                    end
                end)
                
                task.wait(5)
                break
            end
            task.wait(30)
        end
    end
    
    task.spawn(scheduleRestart)
end

-- –£–º–Ω—ã–π –¥–µ—Ç–µ–∫—Ç–æ—Ä –∞–Ω—Ç–∏—á–∏—Ç–∞
local function antiCheatDetector()
    if not STEALTH_MODE then return end
    
    local suspiciousPatterns = {
        "ScriptAnalysis",
        "AntiCheat", 
        "SecurityScan",
        "BehaviorMonitor",
        "MemoryScanner"
    }
    
    local function monitorServices()
        for _, service in ipairs(game:GetChildren()) do
            for _, pattern in ipairs(suspiciousPatterns) do
                if string.find(service.Name, pattern) then
                    warn("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã: "..service.Name)
                    ADAPTIVE_SETTINGS.StealthLevel = 10
                    return true
                end
            end
        end
        return false
    end
    
    task.spawn(function()
        while AUTO_FARM_ENABLED do
            if monitorServices() then
                -- –°–Ω–∏–∂–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –∑–∞—â–∏—Ç—ã
                ADAPTIVE_SETTINGS.CheckInterval = 3
                ADAPTIVE_SETTINGS.MaxFarmTime = 90
            end
            task.wait(15)
        end
    end)
end

-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
local function analyticsSystem()
    local stats = {
        BondsCollected = 0,
        SessionsCompleted = 0,
        ErrorsEncountered = 0,
        TotalUptime = 0
    }
    
    local function trackPerformance()
        while AUTO_FARM_ENABLED do
            stats.TotalUptime = stats.TotalUptime + 1
            
            -- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            if stats.ErrorsEncountered > 10 then
                ADAPTIVE_SETTINGS.CheckInterval = math.min(ADAPTIVE_SETTINGS.CheckInterval + 0.5, 5)
            elseif stats.ErrorsEncountered < 2 then
                ADAPTIVE_SETTINGS.CheckInterval = math.max(ADAPTIVE_SETTINGS.CheckInterval - 0.1, 0.5)
            end
            
            task.wait(1)
        end
    end
    
    return {
        Stats = stats,
        Track = trackPerformance,
        Report = function()
            return string.format("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: %d –±–æ–Ω–¥–æ–≤ | %d —Å–µ—Å—Å–∏–π | %d –æ—à–∏–±–æ–∫", 
                stats.BondsCollected, stats.SessionsCompleted, stats.ErrorsEncountered)
        end
    }
end

-- –°–∏—Å—Ç–µ–º–∞ —Å–∞–º–æ–æ–±—É—á–µ–Ω–∏—è
local function machineLearningSystem()
    local patterns = {
        SuccessfulPaths = {},
        FailedPaths = {},
        OptimalTimings = {}
    }
    
    local function analyzePatterns()
        while AUTO_FARM_ENABLED do
            -- –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
            if #patterns.SuccessfulPaths > 5 then
                ADAPTIVE_SETTINGS.StealthLevel = math.min(ADAPTIVE_SETTINGS.StealthLevel + 1, 10)
            end
            
            -- –ê–Ω–∞–ª–∏–∑ —Ç–∞–π–º–∏–Ω–≥–æ–≤
            local avgTime = 0
            for _, time in ipairs(patterns.OptimalTimings) do
                avgTime = avgTime + time
            end
            avgTime = avgTime / #patterns.OptimalTimings
            
            if avgTime > 0 then
                ADAPTIVE_SETTINGS.MaxFarmTime = math.floor(avgTime * 1.2)
            end
            
            task.wait(60)
        end
    end
    
    return {
        Learn = function(success, timeTaken)
            if success then
                table.insert(patterns.SuccessfulPaths, timeTaken)
            else
                table.insert(patterns.FailedPaths, timeTaken)
            end
            table.insert(patterns.OptimalTimings, timeTaken)
            
            if #patterns.SuccessfulPaths > 20 then
                table.remove(patterns.SuccessfulPaths, 1)
            end
            if #patterns.FailedPaths > 20 then
                table.remove(patterns.FailedPaths, 1)
            end
            if #patterns.OptimalTimings > 30 then
                table.remove(patterns.OptimalTimings, 1)
            end
        end,
        Analyze = analyzePatterns
    }
end

-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
local function selfUpdateSystem()
    local version = "1.2.0"
    local updateUrl = "https://raw.githubusercontent.com/fakeurl/autofarm/main/latest.lua"
    
    local function checkForUpdates()
        while AUTO_FARM_ENABLED do
            pcall(function()
                local response = game:HttpGet(updateUrl)
                if response and response ~= "" then
                    local newVersion = string.match(response, "version = \"(%d+%.%d+%.%d+)\"")
                    if newVersion and newVersion ~= version then
                        warn("üîÅ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: "..newVersion)
                        loadstring(response)()
                    end
                end
            end)
            task.wait(300) -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        end
    end
    
    task.spawn(checkForUpdates)
end

-- –ì–ª–∞–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
local function masterControlSystem()
    local analytics = analyticsSystem()
    local mlSystem = machineLearningSystem()
    
    -- –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø–æ–¥—Å–∏—Å—Ç–µ–º
    autoRestartSystem()
    antiCheatDetector()
    selfUpdateSystem()
    task.spawn(analytics.Track)
    task.spawn(mlSystem.Analyze)
    
    -- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Å –∞–≤—Ç–æ–∞–¥–∞–ø—Ç–∞—Ü–∏–µ–π
    while AUTO_FARM_ENABLED do
        local sessionStart = tick()
        local success = executeFarmStrategy()
        local sessionTime = tick() - sessionStart
        
        -- –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ
        mlSystem.Learn(success, sessionTime)
        
        -- –°–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        if success then
            analytics.Stats.SessionsCompleted += 1
        else
            analytics.Stats.ErrorsEncountered += 1
        end
        
        -- –ê–≤—Ç–æ–ø–∞—É–∑–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
        if analytics.Stats.ErrorsEncountered > 5 then
            warn("‚è∏Ô∏è –ê–≤—Ç–æ–ø–∞—É–∑–∞ –∏–∑-–∑–∞ –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—à–∏–±–æ–∫")
            task.wait(10)
        end
        
        -- –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç
        if analytics.Stats.SessionsCompleted % 10 == 0 then
            warn(analytics.Report())
        end
        
        dynamicWait(adaptiveSpeedController())
    end
end

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
protectedCall(function()
    initializeFarmSystem()
    task.spawn(masterControlSystem)
end)

-- –†–µ–∑–µ—Ä–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
getgenv().EmergencyRestart = function()
    AUTO_FARM_ENABLED = false
    task.wait(2)
    AUTO_FARM_ENABLED = true
    initializeFarmSystem()
    masterControlSystem()
end

warn("üöÄ –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞. –í–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
