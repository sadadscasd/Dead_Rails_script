local AUTO_FARM_ENABLED = true
local CHECK_INTERVAL = 2

-- Инициализация глобальных переменных
if not getgenv().AutoFarmData then
    getgenv().AutoFarmData = {
        Initialized = false,
        GamePlaceId = nil,
        IsInGame = false,
        Connections = {},
        ErrorCount = 0,
        LastErrorTime = 0,
        MaxErrors = 3,
        ErrorCooldown = 5,
        GunSearchTimeout = 20,
        SafetyChecks = true
    }
end

-- Кэш сервисов
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

-- Константы
local BOND_NAME = "Bond"
local GUN_NAME = "MaximGun"
local REMOTES_PATH = {"Remotes", "EndDecision"}
local ACTIVATE_PATH = {"Shared", "Network", "RemotePromise", "Remotes", "C_ActivateObject"}
local ERROR_PATTERNS = {
    "attempt to iterate over a nil value",
    "WeaponController",
    "ReplicatedStorage.Client.Game.Controllers"
}

-- Функция для безопасного добавления и управления соединениями
local function manageConnection(connection, key)
    if key and getgenv().AutoFarmData.Connections[key] then
        getgenv().AutoFarmData.Connections[key]:Disconnect()
    end
    
    if key then
        getgenv().AutoFarmData.Connections[key] = connection
    end
    
    return connection
end

-- Функция для очистки всех соединений
local function cleanupConnections()
    for key, connection in pairs(getgenv().AutoFarmData.Connections) do
        if connection and typeof(connection) == "RBXScriptConnection" then
            connection:Disconnect()
        end
        getgenv().AutoFarmData.Connections[key] = nil
    end
end

-- Функция для проверки, содержит ли текст ошибку из нашего списка
local function isTargetError(message)
    for _, pattern in ipairs(ERROR_PATTERNS) do
        if string.find(message, pattern) then
            return true
        end
    end
    return false
end

-- Перехватчик ошибок
local function setupErrorHandler()
    local function onErrorMessage(message, traceback, script)
        if not AUTO_FARM_ENABLED then return end
        
        if isTargetError(message) then
            local currentTime = tick()
            local data = getgenv().AutoFarmData
            
            if currentTime - data.LastErrorTime > data.ErrorCooldown then
                data.ErrorCount = 0
            end
            
            data.ErrorCount = data.ErrorCount + 1
            data.LastErrorTime = currentTime
            
            warn("Обнаружена целевая ошибка ("..data.ErrorCount.."/"..data.MaxErrors.."):", message)
            
            if data.ErrorCount >= data.MaxErrors then
                data.ErrorCount = 0
                
                local player = Players.LocalPlayer
                if player and player.Character then
                    local humanoid = player.Character:FindFirstChild("Humanoid")
                    if humanoid and humanoid.Health > 0 then
                        warn("Слишком много ошибок! Убиваем персонажа...")
                        pcall(function()
                            humanoid:ChangeState(Enum.HumanoidStateType.Dead)
                        end)
                    end
                end
            end
        end
    end

    manageConnection(game:GetService("ScriptContext").Error:Connect(onErrorMessage), "error_handler")
end

-- Оптимизированная функция поиска в иерархии
local function findInHierarchy(parent, path)
    local current = parent
    for _, name in ipairs(path) do
        current = current:FindFirstChild(name)
        if not current then return nil end
    end
    return current
end

-- Оптимизированная функция безопасного вызова
local function safeCall(func, ...)
    if not AUTO_FARM_ENABLED then return false end
    local success, result = pcall(func, ...)
    if not success then 
        warn("AutoFarm Error:", result) 
        return false
    end
    return true
end

-- Функция для проверки, нужно ли перезапускать скрипт
local function shouldRestartScript()
    if not getgenv().AutoFarmData then return true end
    if game.PlaceId ~= getgenv().AutoFarmData.GamePlaceId then return true end
    if not getgenv().AutoFarmData.IsInGame then return true end
    return false
end

-- Основная функция скрипта
local function main()
    if getgenv().AutoFarmData.Initialized then return end
    getgenv().AutoFarmData.Initialized = true
    
    setupErrorHandler()
    
    while AUTO_FARM_ENABLED do
        if not getgenv().AutoFarmData.GamePlaceId then
            while game.PlaceId == 0 and AUTO_FARM_ENABLED do
                task.wait(1)
            end
            if AUTO_FARM_ENABLED then
                getgenv().AutoFarmData.GamePlaceId = game.PlaceId
                warn("Определен ID игры:", getgenv().AutoFarmData.GamePlaceId)
            end
        end
        
        local isInGame = game.PlaceId == getgenv().AutoFarmData.GamePlaceId
        
        if isInGame and AUTO_FARM_ENABLED then
            warn("Запуск автофарма в игре...")
            getgenv().AutoFarmData.IsInGame = true
            
            local success, err = pcall(function()
                local EndDecision
                local maxWaitTime = 30
                local startTime = tick()
                
                while not EndDecision and tick() - startTime < maxWaitTime and AUTO_FARM_ENABLED do
                    EndDecision = findInHierarchy(ReplicatedStorage, REMOTES_PATH)
                    if not EndDecision then
                        task.wait(1)
                    end
                end
                
                if not EndDecision then
                    error("Не удалось найти EndDecision remote")
                end

                local player = Players.LocalPlayer
                getgenv().autoFarmBond = true
                getgenv().CollectBond = true
                
                local tweenSpeed = 1000
                local collectDelay = 0.01
                local gunCFrame = CFrame.new(350.5, 50.89, -9100.78)
                local rangeMaxGun = 200

                local bondPoints = {
                    CFrame.new(-475.66, 200.77, 21969.36),
                    CFrame.new(-319.90, 200.77, 14036.94),
                    CFrame.new(-15.96, 200.77, 6099.45),
                    CFrame.new(-615.17, 200.77, -1836.15),
                    CFrame.new(249.76, 200.77, -9067.68),
                    CFrame.new(-138.72, 200.77, -17713.91),
                    CFrame.new(249.76, 200.77, -9067.68),
                    CFrame.new(228.52, 200.77, 5163.45),
                    CFrame.new(-860.02, 200.77, -27428.81),
                    CFrame.new(10.24, 200.77, -33604.30),
                    CFrame.new(-322.95, 200.77, -41545.23),
                    CFrame.new(-384.79, 40, -48746.83),
                    CFrame.new(-379.98, 3, -49471.26),
                    CFrame.new(-380.45, -23, -49332.89),
                }

                local function teleportTo(root, cf)
                    return safeCall(function()
                        if not root or not root.Parent then return end
                        root.Anchored = true
                        root.CFrame = cf
                        task.wait(3)
                        if root and root.Parent then
                            root.Anchored = false
                        end
                    end)
                end

                local function tweenTo(root, cf)
                    return safeCall(function()
                        if not root or not root.Parent then return end
                        local distance = (root.Position - cf.Position).Magnitude
                        local duration = distance / tweenSpeed
                        local tween = TweenService:Create(root, TweenInfo.new(duration, Enum.EasingStyle.Linear), {CFrame = cf})
                        tween:Play()
                        task.wait(duration)
                    end)
                end

                local function getLockedGun()
                    local runtime = Workspace:FindFirstChild("RuntimeItems")
                    if not runtime then return nil end
                    
                    for _, v in ipairs(runtime:GetChildren()) do
                        if v:IsA("Model") and v.Name == GUN_NAME then
                            if (v:GetPivot().Position - gunCFrame.Position).Magnitude <= rangeMaxGun then
                                return v
                            end
                        end
                    end
                    return nil
                end

                local function sitInGun(root)
                    local gun = getLockedGun()
                    if not gun then return false end
                    local seat = gun:FindFirstChild("VehicleSeat")
                    if seat and seat:IsA("VehicleSeat") then
                        if seat.Disabled then seat.Disabled = false end
                        teleportTo(root, seat.CFrame)
                        return true
                    end
                    return false
                end

                local function jumpOff(humanoid)
                    safeCall(function()
                        if humanoid and humanoid.Parent then
                            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                        end
                    end)
                end

                local function freezeMidAir(root)
                    safeCall(function()
                        if not root or not root.Parent then return end
                        root.Anchored = true
                        root.CFrame = CFrame.new(root.Position + Vector3.new(0, 5, 0))
                        task.wait(1)
                        if root and root.Parent then
                            root.Anchored = false
                        end
                    end)
                end

                local function tryTweenToBond(root)
                    local found = false
                    safeCall(function()
                        if not root or not root.Parent then return end
                        local runtime = Workspace:FindFirstChild("RuntimeItems")
                        if runtime then
                            for _, v in ipairs(runtime:GetChildren()) do
                                if not AUTO_FARM_ENABLED then break end
                                if v:IsA("Model") and v.Name == BOND_NAME then
                                    tweenTo(root, CFrame.new(v:GetPivot().Position + Vector3.new(0, 4, 0)))
                                    found = true
                                    break
                                end
                            end
                        end
                    end)
                    return found
                end

                local function setupGun(root, humanoid)
                    safeCall(function()
                        if not root or not root.Parent then return end
                        teleportTo(root, gunCFrame)
                        if sitInGun(root) then
                            task.wait(0.6)
                            jumpOff(humanoid)
                            freezeMidAir(root)
                            task.wait(0.5)
                            sitInGun(root)
                            task.wait(0.1)
                        end
                    end)
                end

                -- Collect Bond с оптимизацией
                local lastCollectTime = 0
                local activateRemote = findInHierarchy(ReplicatedStorage, ACTIVATE_PATH)
                
                manageConnection(RunService.Heartbeat:Connect(function()
                    if not AUTO_FARM_ENABLED then return end
                    if getgenv().CollectBond and tick() - lastCollectTime >= collectDelay then
                        lastCollectTime = tick()
                        safeCall(function()
                            local char = player.Character
                            if char then
                                local runtime = Workspace:FindFirstChild("RuntimeItems")
                                if runtime then
                                    for _, bond in ipairs(runtime:GetChildren()) do
                                        if not AUTO_FARM_ENABLED then break end
                                        if bond:IsA("Model") and bond.Name == BOND_NAME then
                                            local remote = ReplicatedStorage:FindFirstChild("Shared")
                                            if remote then
                                                remote = remote:FindFirstChild("Network")
                                                if remote then
                                                    remote = remote:FindFirstChild("RemotePromise")
                                                    if remote then
                                                        remote = remote:FindFirstChild("Remotes")
                                                        if remote then
                                                            remote = remote:FindFirstChild("C_ActivateObject")
                                                            if remote then
                                                                remote:FireServer(bond)
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end)
                    end
                end), "collect_connection")

                -- фарм на персонаже
                local function farmCharacter(character)
                    if not character then return end
                    
                    local root = character:WaitForChild("HumanoidRootPart", 10)
                    local humanoid = character:WaitForChild("Humanoid", 10)
                    
                    if not root or not humanoid then return end
                    
                    local currentIndex = 1
                    local started = false

                    while humanoid.Health > 0 and AUTO_FARM_ENABLED and getgenv().AutoFarmData.IsInGame do
                        if not started then
                            setupGun(root, humanoid)
                            started = true
                        end

                        local foundBond = tryTweenToBond(root)
                        if not foundBond then
                            if currentIndex <= #bondPoints then
                                teleportTo(root, bondPoints[currentIndex])
                                currentIndex = currentIndex + 1
                            else
                                safeCall(function()
                                    humanoid:ChangeState(Enum.HumanoidStateType.Dead)
                                end)
                                break
                            end
                        end
                        task.wait(0.3)
                    end
                end

                -- асинхронное ожидание респавна
                local function onCharacter(character)
                    task.spawn(function()
                        farmCharacter(character)
                    end)
                end

                -- подключаемся к CharacterAdded
                manageConnection(player.CharacterAdded:Connect(onCharacter), "character_added")

                -- если персонаж уже есть
                if player.Character then
                    onCharacter(player.Character)
                end

                -- EndDecision Loop
                local endDecisionTask
                endDecisionTask = task.spawn(function()
                    while AUTO_FARM_ENABLED and getgenv().AutoFarmData.IsInGame do
                        if getgenv().autoFarmBond then
                            safeCall(function()
                                EndDecision:FireServer(false)
                            end)
                        end
                        task.wait(0.5)
                    end
                end)

                -- Отслеживаем выход из игры
                manageConnection(Players.LocalPlayer:GetPropertyChangedSignal("UserId"):Connect(function()
                    if game.PlaceId ~= getgenv().AutoFarmData.GamePlaceId then
                        getgenv().AutoFarmData.IsInGame = false
                        if endDecisionTask then
                            task.cancel(endDecisionTask)
                        end
                    end
                end), "userid_changed")

                -- Ждем пока находимся в игре
                while getgenv().AutoFarmData.IsInGame and AUTO_FARM_ENABLED do
                    task.wait(1)
                end

                -- Очищаем соединения при выходе
                cleanupConnections()
                if endDecisionTask then
                    task.cancel(endDecisionTask)
                end
            end)
            
            if not success then
                warn("Ошибка в автофарме:", err)
            end
        else
            -- Мы не в игре, ждем перехода
            warn("Ожидание перехода в игру... Текущее место:", game.PlaceId)
            getgenv().AutoFarmData.IsInGame = false
            task.wait(CHECK_INTERVAL)
        end
        
        -- Проверяем, нужно ли перезапускать скрипт
        if shouldRestartScript() then
            warn("Обнаружена перезагрузка игры, реинициализируем скрипт...")
            getgenv().AutoFarmData.Initialized = false
            getgenv().AutoFarmData.IsInGame = false
            cleanupConnections()
            break
        end
        
        task.wait(5)
    end
end

-- Запуск с возможностью рестарта
while AUTO_FARM_ENABLED do
    local success, err = pcall(main)
    if not success then
        warn("Ошибка в основном цикле:", err)
        cleanupConnections()
    end
    task.wait(2) -- Ждем перед перезапуском
end

-- Дополнительный мониторинг для надежности
task.spawn(function()
    while AUTO_FARM_ENABLED do
        -- Периодически проверяем, не изменился ли PlaceId игры
        if getgenv().AutoFarmData.GamePlaceId and game.PlaceId ~= 0 and game.PlaceId ~= getgenv().AutoFarmData.GamePlaceId then
            warn("Обнаружен новый PlaceId. Обновляем... Старый:", getgenv().AutoFarmData.GamePlaceId, "Новый:", game.PlaceId)
            getgenv().AutoFarmData.GamePlaceId = game.PlaceId
        end
        
        -- Обновляем статус нахождения в игре
        if getgenv().AutoFarmData.GamePlaceId then
            getgenv().AutoFarmData.IsInGame = game.PlaceId == getgenv().AutoFarmData.GamePlaceId
        end
        
        task.wait(5)
    end
end)
